pmy_exp
	: IDER
	| CONT
	| STR_LIT
	| '(' exp ')'
	;

pfx_exp
	: pmy_exp pfx_exp'
	;

pfx_exp' 
	: pfx_exp_after pfx_exp'
	| ε
	;

pfx_exp_after 
	: '[' exp ']' 
	| '('  pfx_exp_after_to
	| '.' IDER
	| PTR_OP IDER
	| INC_OP
	| DEC_OP
	;

pfx_exp_after_to
	: ')'
	| arg_exp_list ')'
	;

arg_exp_list
	: asst_exp arg_exp_list'
	;

arg_exp_list'
	: ',' asst_exp arg_exp_list'
	| ε
	;

unary_exp
	: pfx_exp
	| INC_OP unary_exp
	| DEC_OP unary_exp
	| unary_op cast_exp
	| SIZEOF unary_exp_after
	;

unary_exp_after
	: unary_exp
	| '(' type_name ')'
	;

unary_op
	: '&'
	| '*'
	| '+'
	| '-'
	| '~'
	| '!'
	;

cast_exp
	: unary_exp
	| '(' type_name ')' cast_exp
	;

mult_exp
	: cast_exp mult_exp'
	;

mult_exp'
	: mult_exp_after cast_exp mult_exp'
	| ε
	;

mult_exp_after
	: '*'
	| '/'
	| '%'
	;

add_exp
	: mult_exp add_exp'
	;

add_exp' 
	: add_exp_after mult_exp add_exp'
	| ε
	;

add_exp_after
	: '+'
	| '-'
	;

shift_exp
	: add_exp shift_exp'
	;

shift_exp'
	: shift_exp_after add_exp shift_exp'
	| ε
	;

shift_exp_after
	: LEFT_OP
	| RIGHT_OP
	;

rela_exp
	: shift_exp rela_exp'
	;

rela_exp'
	: rela_exp_after shift_exp rela_exp'
	| ε
	;
	
rela_exp_after
	: '<'
	| '>'
	| LE_OP
	| GE_OP
	;

equ_exp
	: rela_exp equ_exp'
	;

equ_exp'
	: equ_exp_after rela_exp equ_exp'
	| ε
	;

equ_exp_after
	: EQ_OP
	| NE_OP
	;

and_exp
	: equ_exp and_exp'
	;

and_exp'
	: '&' equ_exp and_exp'
	| ε
	;

exc_or_exp
	: add_exp exc_or_exp'
	;

exc_or_exp'
	: '^' add_exp exc_or_exp'
	| ε
	;

in_or_exp
	: exc_or_exp in_or_exp'
	;

in_or_exp'
	: '|' exc_or_exp in_or_exp'
	| ε
	;

log_and_exp
	: in_or_exp log_and_exp'
	;

log_and_exp'
	: AND_OP in_or_exp log_and_exp'
	| ε
	;

log_or_exp
	: log_and_exp log_or_exp'
	;

log_or_exp'
	: OR_OP log_and_exp log_or_exp'
	| ε
	;

cond_exp
	: log_or_exp cond_exp_after
	;

cond_exp_after
	: '?' exp ':' cond_exp
	| ε
	;

asst_exp
	: cond_exp
	| unary_exp asst_op asst_exp
	;

asst_op
	: '='
	| MUL_ASSIGN
	| DIV_ASSIGN
	| MOD_ASSIGN
	| ADD_ASSIGN
	| SUB_ASSIGN
	| LEFT_ASSIGN
	| RIGHT_ASSIGN
	| AND_ASSIGN
	| XOR_ASSIGN
	| OR_ASSIGN
	;

exp
	: asst_exp exp'
	;

exp'
	: ',' asst_exp exp'
	| ε
	;

cont_exp
	: cond_exp
	;

decl
	: decl_spr decl_after
	;

decl_after
	: ';'
	| init_declor_list ';'
	;

decl_spr
	: ste_class_spr decl_spr_after
	| type_spr decl_spr_after
	| type_qur decl_spr_after
	;

decl_spr_after
	: decl_spr
	| ε
	;

init_declor_list
	: init_declor init_declor_list'
	;

init_declor_list' 
	: ε
	| ',' init_declor init_declor_list'
	;

init_declor
	: declor init_declor_after
	;

init_declor_after
	: ε
	| '=' init_er
	;

ste_class_spr
	: TYPEDEF
	| EXTERN
	| STATIC
	| AUTO
	| REGISTER
	;

type_spr
	: VOID
	| CHAR
	| SHORT
	| INT
	| LONG
	| FLOAT
	| DOUBLE
	| SIGNED
	| UNSIGNED
	| sut_or_un_spr
	| enum_spr
	| TYPE_NAME
	;

sut_or_un_spr
	: sut_or_un sut_or_un_spr_after
	;

sut_or_un_spr_after 
	: IDER sut_or_un_spr_after_to
	| '{' sut_decl_list '}'
	;

sut_or_un_spr_after_to
	: '{' sut_decl_list '}'
	| ε
	;

sut_or_un
	: STRUCT
	| UNION
	;

sut_decl_list
	: sut_decl sut_decl_list'
	;

sut_decl_list'
	: sut_decl sut_decl_list'
	| ε
	;

sut_decl
	: spr_qur_list sut_declor_list ';'
	;

spr_qur_list
	: type_spr spr_qur_list_after
	| type_qur spr_qur_list_after
	;

spr_qur_list_after
	: spr_qur_list
	| ε
	;

sut_declor_list
	: sut_declor sut_declor_list'
	;

sut_declor_list'
	: ε
	| ',' sut_declor sut_declor_list'
	;

sut_declor
	: declor sut_declor_after
	| ':' cont_exp 
	;

sut_declor_after
	: ε
	| ':' cont_exp
	;

enum_spr
	: ENUM enum_spr_after
	;

enum_spr_after
	: '{' enumor_list '}'
	| IDER enum_spr_after_to
	;

enum_spr_after_to
	: '{' enumor_list '}'
	| ε
	;

enumor_list
	: enumor enumor_list'
	;

enumor_list'
	: ε
	| ',' enumor enumor_list'
	;

enumor
	: IDER enumor_after
	;

enumor_after
	: ε
	| '=' cont_exp
	;

type_qur
	: CONST
	| VOLATILE
	;

declor
	: pointer dir_declor
	| dir_declor
	;

dir_declor
	: IDER dir_declor'
	| '(' declor ')' dir_declor'
	;

dir_declor'
	: dir_declor_after dir_declor'
	| ε
	;

dir_declor_after
	: '[' dir_declor_after_1
	| '(' dir_declor_after_2
	;

dir_declor_after_1
	: cont_exp ']'
	| ']'
	;

dir_declor_after_2
	: par_type_list ')'
	| ider_list ')'
	| ')'
	;

pointer
	: '*' pointer_after
	;

pointer_after
	: pointer_after_to
	| type_qur_list pointer_after_to
	;

pointer_after_to
	: ε
	| pointer
	;

type_qur_list
	: type_qur type_qur_list'
	;

type_qur_list'
	: ε
	| type_qur type_qur_list'
	;

par_type_list
	: par_list par_type_list_after
	;

par_type_list_after
	: ε
	| ',' ELLIPSIS
	;

par_list
	: par_decl par_list'
	;

par_list'
	: ε
	| ',' par_decl par_list'
	;

par_decl
	: decl_spr par_decl_after
	;

par_decl_after
	: declor
	| abs_declor
	| ε
	;

ider_list
	: IDER ider_list'
	;

ider_list'
	: ε
	| ',' IDER ider_list' 
	;

type_name
	: spr_qur_list type_name_after
	;

type_name_after
	: ε
	| abs_declor
	;

abs_declor
	: pointer abs_declor_after
	| dir_abs_declor
	;

abs_declor_after
	: dir_abs_declor
	| ε
	;

dir_abs_declor
	: '(' dir_abs_declor_after_1 dir_abs_declor'
	| '[' dir_abs_declor_after_2 dir_abs_declor'
	;

dir_abs_declor'
	: ε
	| dir_abs_declor_after dir_abs_declor'
	;


dir_abs_declor_after
	: '[' dir_abs_declor_after_2
	| '(' dir_abs_declor_after_3
	;

dir_abs_declor_after_1
	: abs_declor ')'
	| dir_abs_declor_after_3
	;

dir_abs_declor_after_2
	: ']'
	| cont_exp ']'
	;

dir_abs_declor_after_3
	: ')'
	| par_type_list ')'
	;

init_er
	: asst_exp
	| '{' init_er_list init_er_after
	;

init_er_after
	: '}'
	| ',' '}'
	;

init_er_list
	: init_er init_er_list'
	;

init_er_list'
	: ε
	| ',' init_er init_er_list'
	;

stat
	: lab_stat
	| cmp_stat
	| exp_stat
	| sel_stat
	| itn_stat
	| jmp_stat
	;

lab_stat
	: IDER ':' stat
	| CASE cont_exp ':' stat
	| DEFAULT ':' stat
	;

cmp_stat
	: '{' cmp_stat_after 
	;

cmp_stat_after
	: cmp_stat_after_1
	| decl_list cmp_stat_after_1
	;

cmp_stat_after_1
	: '}'
	| stat_list '}'
	;

decl_list
	: decl decl_list'
	;

decl_list'
	: ε
	| decl decl_list'
	;

stat_list
	: stat stat_list'
	;

stat_list'
	: ε
	| stat stat_list'
	;


exp_stat
	: ';'
	| exp ';'
	;

sel_stat
	: IF '(' exp ')' stat sel_stat_after
	| SWITCH '(' exp ')' stat
	;

sel_stat_after
	: ε
	| ELSE stat
	;

itn_stat
	: WHILE '(' exp ')' stat
	| DO stat WHILE '(' exp ')' ';'
	| FOR '(' exp_stat exp_stat itn_stat_after
	;

itn_stat_after
	: ')' stat
	| exp ')' stat
	;

jmp_stat
	: GOTO IDER ';'
	| CONTINUE ';'
	| BREAK ';'
	| RETURN exp_stat
	;

tran_unit
	: ext_decl tran_unit'
	;

tran_unit'
	: ε
	| ext_decl tran_unit'
	;

ext_decl
	: fun_def
	| decl
	;

fun_def
	: decl_spr fun_def_after
	| fun_def_after
	;

fun_def_after
	: declor fun_def_after_to
	;

fun_def_after_to
	: decl_list cmp_stat
	| cmp_stat
	;