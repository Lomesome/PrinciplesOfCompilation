S
	: function functions
	;

function
	: func_type PUSH funcname ADDFUN '(' args ')' program
	;

func_type
	: type
	| 'void'
	;

functions
	: function functions
	| ε
	;

funcname
	: id
	| 'main'
	;

args
	: type PUSH id PUSH ADDARG arg
	| ε
	;

arg
	: , type PUSH id PUSH ADDARG arg
	| ε
	;

program
	: ';'
	| '{' LEVELA expmaker '}' LEVELS
	;

expmaker
	: type id idassignment ';' expmaker
	| id var_func ';' expmaker
	| 'if' '(' boolexp ')' IF program iselse expmaker
	| 'while' '(' boolexp ')' DO program WE expmaker
	| 'do' DOW program 'while' '(' boolexp ')' ';' expmaker
	| ε
	;

_args
	: id _arg
	| ε
	;

_arg
	: , id _arg
	| ε
	;

var_func
	: grop exp ASSI
	| CALLFUN '(' _args ')'
	;

iselse
	: ε IEFIR
	| 'else' EL elif
	;

elif
	: '{' LEVELA expmaker '}' LEVELS IESEC
	| ε
	;

grop
	: PUSH '='
	| PUSH '[' int_const PUSHNUM ']' '='
	;

idassignment
	: ε
	| PUSH '=' exp ASSI idassis
	| '[' int_const ']'
	| , id idassignment
	;

idassis
	: , id idassignment
	| ε
	;

boolexp
	: beforexp afterexp
	;

beforexp
	: exp
	;

afterexp
	: '>' exp GEQG
	| '<' exp GEQL
	| '==' exp GEQE
	| '>=' exp GEQGE
	| '<=' exp GEQLE
	| ε
	;

exp
	: assignment_exp additive_exp
	;

additive_exp
	: '+' assignment_exp GEQA additive_exp
	| '-' assignment_exp GEQS additive_exp
	| ε
	;

assignment_exp
	: primary_exp mult_exp
	;

mult_exp
	: '*' primary_exp GEQM mult_exp
	| '/' primary_exp GEQD mult_exp
	| ε
	;

primary_exp
	: id PUSH
	| float_const PUSH
	| int_const PUSH
	| string_const PUSH
	| char_const PUSH
	| '(' exp ')'
	;
type
	: 'int'
	| 'char'
	| 'float'
	| 'string'
	;